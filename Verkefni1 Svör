* Ladyada´s lesson 0: Vélbúnaður

i. Hann er notaður af optiboot hleðslutækinu.
ii. Munurinn er sá að digital pinninn er aðeins fær um að greina hvort það er spenna til staðar á pinna eða ekki, meðan output pinninn er tengdur við innri Analog to Digital Converter (ADC) og getur mælt raunverulega spennu á pinnanum.
iii. PWM merki er stafræna fermetrabylgja, þar sem tíðnin er stöðug, en það brot af þeim tíma sem merkið er á (vaktunarferlið eða duty cycle) er hægt að breyta á milli 0 og 100%.
-------------
2.
i. void setup() {
  // initialize digital pin LED_BUILTIN as an output.
  pinMode(LED_BUILTIN, OUTPUT);
}

// the loop function runs over and over again forever
void loop() {
  digitalWrite(LED_BUILTIN, HIGH); 
  delay(1000);                       
  digitalWrite(LED_BUILTIN, LOW);    
  delay(1000);                      
}
-------------
3. All about LEDS

i. Forward Voltage er það magn af spennu sem þarf til að straumur flæði yfir díóða.
ii. X
iii. X

4. Ladya's Lesson 2 LEDs Kóði:
i. int led = 8;
 
void setup() {                
  pinMode(led, OUTPUT);     
}
 
void loop() {
  digitalWrite(led, HIGH); 
  delay(1000);               
  digitalWrite(led, LOW);    
  delay(1000);               
}
-------------
5. Ladya's Lesson 3: RGB LED Kóði:
-------------
int redPin = 11;
int greenPin = 10;
int bluePin = 9;

//uncomment this line if using a Common Anode LED
//#define COMMON_ANODE

void setup()
{
  pinMode(redPin, OUTPUT);
  pinMode(greenPin, OUTPUT);
  pinMode(bluePin, OUTPUT);  
}

void loop()
{
  setColor(255, 0, 0);  // red
  delay(1000);
  setColor(0, 255, 0);  // green
  delay(1000);
  setColor(0, 0, 255);  // blue
  delay(1000);
  setColor(255, 255, 0);  // yellow
  delay(1000);  
  setColor(80, 0, 80);  // purple
  delay(1000);
  setColor(0, 255, 255);  // aqua
  delay(1000);
}

void setColor(int red, int green, int blue)
{
  #ifdef COMMON_ANODE
    red = 255 - red;
    green = 255 - green;
    blue = 255 - blue;
  #endif
  analogWrite(redPin, red);
  analogWrite(greenPin, green);
  analogWrite(bluePin, blue);  
}
-------------
TinkerCad Projects

----------
7. Veit ekki en ég fann ekkert sem að ég gat notað fyrir það.
---------
8. 'Baud' stendur fyrir hraða í merkjasendingu, en þar sem þetta snýst um Arduino stendur það fyrir bita á sekúndu, 
   þannig að 9600 baud í Serial.begin(9600) er 9600 bitar á sekúndu. Ef breytt verður magninu í Serial.begin breytist sama magnið af bitum á sekúndu.
--------
10. Youtube Link fyrir video[Verkleg] - Ultrasonic[https://www.youtube.com/watch?v=Dl6IApDalu4], 
                                        Photoresistor[https://www.youtube.com/watch?v=PkZeAnfScJk], 
                                        Push button[https://www.youtube.com/watch?v=cxw3y4VlhV0],
                                        RGB LED[https://www.youtube.com/watch?v=y8c8dn11bbU],
11. Kóðar
Push Button =
[int buttonState = 0;

void setup()
{
  pinMode(2, INPUT);
  pinMode(13, OUTPUT);
}

void loop()
{
  buttonState = digitalRead(2);
  if (buttonState == HIGH) {
    digitalWrite(13, LOW);
  } else {
    digitalWrite(13, HIGH);
  }
  delay(10); 
}
----
Photoresistor =
  int sensorValue = 0;

void setup()
{
  pinMode(A0, INPUT);
  Serial.begin(9600);

  pinMode(9, OUTPUT);
}

void loop()
{
  sensorValue = analogRead(A0);
  Serial.println(sensorValue);
  analogWrite(9, map(sensorValue, 0, 1023, 0, 255));
  delay(100); 
}

----
Ultra Sonic = 
   int distanceThreshold = 0;

int cm = 0;

int inches = 0;

long readUltrasonicDistance(int triggerPin, int echoPin)
{
  pinMode(triggerPin, OUTPUT);  // Clear the trigger
  digitalWrite(triggerPin, LOW);
  delayMicroseconds(2);
  // Sets the trigger pin to HIGH state for 10 microseconds
  digitalWrite(triggerPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(triggerPin, LOW);
  pinMode(echoPin, INPUT);
  // Reads the echo pin, and returns the sound wave travel time in microseconds
  return pulseIn(echoPin, HIGH);
}

void setup()
{
  Serial.begin(9600);

  pinMode(2, OUTPUT);
  pinMode(3, OUTPUT);
  pinMode(4, OUTPUT);
}

void loop()
{
  // set threshold distance to activate LEDs
  distanceThreshold = 350;
  // measure the ping time in cm
  cm = 0.01723 * readUltrasonicDistance(7, 6);
  // convert to inches by dividing by 2.54
  inches = (cm / 2.54);
  Serial.print(cm);
  Serial.print("cm, ");
  Serial.print(inches);
  Serial.println("in");
  if (cm > distanceThreshold) {
    digitalWrite(2, LOW);
    digitalWrite(3, LOW);
    digitalWrite(4, LOW);
  }
  if (cm <= distanceThreshold && cm > distanceThreshold - 100) {
    digitalWrite(2, HIGH);
    digitalWrite(3, LOW);
    digitalWrite(4, LOW);
  }
  if (cm <= distanceThreshold - 100 && cm > distanceThreshold - 250) {
    digitalWrite(2, HIGH);
    digitalWrite(3, HIGH);
    digitalWrite(4, LOW);
  }
  if (cm <= distanceThreshold - 250 && cm > distanceThreshold - 350) {
    digitalWrite(2, HIGH);
    digitalWrite(3, HIGH);
    digitalWrite(4, HIGH);
  }
  if (cm <= distanceThreshold - 350) {
    digitalWrite(2, HIGH);
    digitalWrite(3, HIGH);
    digitalWrite(4, HIGH);
  }
  delay(100); // Wait for 100 millisecond(s)
}
